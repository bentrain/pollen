var Pollen=new function(){function UID(){return(new Date).getTime()+"_"+Math.floor(999*Math.random())+"_"+Math.floor(999*Math.random())}function addDefaultNodes(e){var t={}
e.nodes||(e.nodes={})
for(var n in t)e.nodes[n]||(e.nodes[n]=t[n])
e.hasDefaultNodes=!0}function isDOM(e){return"object"==typeof HTMLElement?e instanceof HTMLElement:e&&"object"==typeof e&&null!==e&&1===e.nodeType&&"string"==typeof e.nodeName}var connections=[]
this.exchange=function(){function e(e,t,n){var o="nodeTo",r="Node"
return isDOM(e)&&(o="attributeTo"),isDOM(n)&&(r="Attribute"),isDOM(e)||void 0!=e.nodes||(o="propertyTo"),isDOM(n)||void 0!=n.nodes||(r="Property"),this.connectionType[o+r]}var t=[]
return this.connectionType={nodeToNode:0,nodeToAttribute:1,attributeToNode:2,attributeToAttribute:3,nodeToProperty:4,propertyToNode:5,attributeToProperty:6,propertyToAttribute:7,propertyToProperty:8},this.getConnections=function(){return t},this.connect=function(n,o,r,i){var a=e(n,o,r,i)
switch(a){case this.connectionType.nodeToNode:if(n.hasNode(o)&&r.hasNode(i))return void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})
case this.connectionType.nodeToAttribute:if(n.hasNode(o)&&(r.hasAttribute(i)||void 0!=r[i]))return void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})
case this.connectionType.attributeToNode:if((n.hasAttribute(o)||void 0!=n[o])&&r.hasNode(i))return Pollen.exchange.observer.watch(n,o,function(e){this.report(e.object.getAttribute("pollenID"),e.property,e.newValue)}),void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})
case this.connectionType.attributeToAttribute:if((n.hasAttribute(o)||void 0!=n[o])&&(r.hasAttribute(i)||void 0!=r[i]))return Pollen.exchange.observer.watch(n,o,function(e){this.report(e.object.getAttribute("pollenID"),e.property,e.newValue)}),void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})
case this.connectionType.nodeToProperty:if(n.hasNode(o)&&void 0!=r[i])return void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})
case this.connectionType.propertyToNode:if(void 0!=n[o]&&r.hasNode(i))return Pollen.exchange.observer.watch(n,o,function(e){this.report(e.object.pollenID,e.property,e.newValue)}),void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})
case this.connectionType.propertyToAttribute:if(void 0!=n[o]&&r.hasAttribute(i))return Pollen.exchange.observer.watch(n,o,function(e){this.report(e.object.pollenID,e.property,e.newValue)}),void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})
case this.connectionType.attributeToProperty:if(n.hasAttribute(o)&&void 0!=r[i])return Pollen.exchange.observer.watch(n,o,function(e){this.report(e.object.getAttribute("pollenID"),e.property,e.newValue)}),void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})
case this.connectionType.propertyToProperty:if(void 0!=n[o]&&void 0!=r[i])return Pollen.exchange.observer.watch(n,o,function(e){this.report(e.object.pollenID,e.property,e.newValue)}),void t.push({type:a,from:n,to:r,fromNode:o,toNode:i})}return!1},this.disconnect=function(n,o,r,i){var a=e(n,o,r,i)
for(var u in t){var l=t[u]
switch(a){case this.connectionType.nodeToNode:if(l.type==a&&l.from.pollenID==n.pollenID&&l.to.pollenID==r.pollenID&&l.fromNode==o&&l.toNode==i)return void t.splice(u,1)
case this.connectionType.attributeToNode:if(l.type==a&&l.from.getAttribute("pollenID")==n.getAttribute("pollenID")&&l.to.pollenID==r.pollenID&&l.fromNode==o&&l.toNode==i)return this.exchange.observer.ignore(l.from,l.fromNode),void t.splice(u,1)
case this.connectionType.nodeToAttribute:if(l.type==a&&l.from.pollenID==n.pollenID&&l.to.getAttribute("pollenID")==r.getAttribute("pollenID")&&l.fromNode==o&&l.toNode==i)return void t.splice(u,1)
case this.connectionType.AttributeToAttribute:if(l.type==a&&l.from.getAttribute("pollenID")==n.getAttribute("pollenID")&&l.to.getAttribute("pollenID")==r.getAttribute("pollenID")&&l.fromNode==o&&l.toNode==i)return this.exchange.observer.ignore(l.from,l.fromNode),void t.splice(u,1)
case this.connectionType.nodeToProperty:if(l.type==a&&l.from.pollenID==n.pollenID&&l.to.pollenID==r.pollenID&&l.fromNode==o&&l.toNode==i)return void t.splice(u,1)
case this.connectionType.propertyToNode:case this.connectionType.propertyToProperty:if(l.type==a&&l.from.pollenID==n.pollenID&&l.to.pollenID==r.pollenID&&l.fromNode==o&&l.toNode==i)return t.splice(u,1),void this.exchange.observer.ignore(l.from,l.fromNode)
case this.connectionType.propertyToAttribute:if(l.type==a&&l.from.pollenID==n.pollenID&&l.to.getAttribute("pollenID")==r.getAttribute("pollenID")&&l.fromNode==o&&l.toNode==i)return this.exchange.observer.ignore(l.from,l.fromNode),void t.splice(u,1)
case this.connectionType.attributeToNode:if(l.type==a&&l.from.getAttribute("pollenID")==n.getAttribute("pollenID")&&l.to.pollenID==r.pollenID&&l.fromNode==o&&l.toNode==i)return this.exchange.observer.ignore(l.from,l.fromNode),void t.splice(u,1)}return!1}},this.disconnectObject=function(){},this.report=function(n,o,r,i){i=i||""
var a,u
for(var u in t){a=t[u]
var l=e(a.from,a.fromNode,a.to,a.toNode)
switch(l){case this.connectionType.nodeToNode:a.from.pollenID==n&&a.fromNode==o&&a.to.getNode(a.toNode)!==r&&a.to.setNode(a.toNode,r)
break
case this.connectionType.nodeToAttribute:a.from.pollenID==n&&a.fromNode==o&&(a.to.getAttribute(a.toNode)!==r||a.to[a.toNode]!==r)&&a.to.setAttribute(a.toNode,r)
break
case this.connectionType.attributeToNode:a.from.getAttribute("pollenID")==n&&a.fromNode==o&&a.to.getNode(a.toNode)!==r&&a.to.setNode(a.toNode,r)
break
case this.connectionType.attributeToAttribute:a.from.getAttribute("pollenID")==n&&a.fromNode==o&&(a.to.getAttribute(a.toNode)!==r||a.to[a.toNode]!==r)&&a.to.setAttribute(a.toNode,r)
break
case this.connectionType.nodeToProperty:case this.connectionType.propertyToProperty:a.from.pollenID==n&&a.fromNode==o&&a.to[a.toNode]!==r&&(a.to[a.toNode]=r)
break
case this.connectionType.propertyToNode:a.from.pollenID==n&&a.fromNode==o&&a.to.getNode(a.toNode)!==r&&a.to.setNode(a.toNode,r)
break
case this.connectionType.propertyToAttribute:a.from.pollenID==n&&a.fromNode==o&&a.to.getAttribute(a.toNode)!==r&&a.to.setAttribute(a.toNode,r)
break
case this.connectionType.attributeToNode:a.from.getAttribute("pollenID")==n&&a.fromNode==o&&a.to[a.toNode]!==r&&(a.to[a.toNode]=r)}}},this.observer=function(){var e="PlnShadow",t="plnObserver"
return this.watch=function(n,o,r,i){if(isDOM(n)&&1!=i)return Object.defineProperty(n,t,{configurable:!0,value:new MutationObserver(function(e){for(var t in e)e[t].attributeName==o&&r({object:n,property:o,oldValue:e[t].oldValue,newValue:n.getAttribute(o)})})}),n[t].observe(n,{attributes:!0,attributeOldValue:!0}),!0
var a=Object.getOwnPropertyDescriptor(n,o)
return a?(Object.defineProperty(n,o+e,a),a.configurable?(Object.defineProperty(n,o,{set:function(t){r({object:n,property:o,oldValue:n[o],newValue:t}),n[o+e]=t}}),!0):!1):!1},this.ignore=function(n,o){if(n.constructor.name.indexOf("HTML")>-1)n[t].disconnect(),delete n[t]
else{var r=Object.getOwnPropertyDescriptor(n,o+e)
r&&(Object.defineProperty(n,o,r),delete n[o+e])}},this}(),this}(),this.behaviour=function(){var e={interactive:function(){this.nodes={onInteraction:{},onInteractionBegin:{},onInteractionEnd:{}}}}
this.addBehaviour=function(){},this.removeBehaviour=function(){},this.getBehaviours=function(){return e}}(),this.factory=function(){var _logic={counter:function(){var e=this,t=0,n=1,o=!1
this.label="Counter",this.desc="Used to keep incremental count of a value",this.nodes={value:{type:"number",label:"Value",desc:"The current value of the counter",get:function(){return t},set:function(n){t=n,Pollen.exchange.report(e.pollenID,"add",n,"counter.value")}},step:{type:"number",label:"Step",desc:"The amount to increment the counter each time it is triggered",get:function(){return n},set:function(e){n=e}},add:{type:"boolean",label:"Add",desc:"Adds the current step amount to the current counter value",get:function(){return o},set:function(){t+=n,Pollen.exchange.report(e.pollenID,"value",t,"counter.add")}},subtract:{type:"boolean",label:"Subtract",desc:"Subtracts the current step amount from the current counter value",get:function(){return o},set:function(){t-=n,Pollen.exchange.report(e.pollenID,"value",t,"counter.subtract")}},clear:{type:"boolean",label:"Clear",desc:"Clears the value of the counter",get:function(){return!1},set:function(){t=0,Pollen.exchange.report(e.pollenID,"value",t,"counter.clear")}}}},calculator:function(){var e=this,t=0
this.label="Calculator",this.desc="Used to calculator numbers",this.nodes={value:{type:"number",label:"Value",desc:"The current value of the calculator",get:function(){return t},set:function(n){t=+n,Pollen.exchange.report(e.pollenID,"add",n,"calculator.value")}},add:{type:"number",label:"Add",desc:"Add a number to the current value",get:function(){return t},set:function(n){t+=+n,Pollen.exchange.report(e.pollenID,"value",t,"calculator.add")}},subtract:{type:"number",label:"Subtract",desc:"Subtract a number from the current value",get:function(){return t},set:function(n){t-=+n,Pollen.exchange.report(e.pollenID,"value",t,"calculator.subtract")}},multiply:{type:"number",label:"Multiply",desc:"Multiply the value by this number",get:function(){return t},set:function(n){t*=+n,Pollen.exchange.report(e.pollenID,"value",t,"calculator.multiply")}},divide:{type:"number",label:"Divide",desc:"Divide the value by this number",get:function(){return t},set:function(n){t/=+n,Pollen.exchange.report(e.pollenID,"value",t,"calculator.divide")}},clear:{type:"boolean",label:"Clear",desc:"Clears the value of the calculator",get:function(){return!1},set:function(){t=0,Pollen.exchange.report(e.pollenID,"value",t,"calculator.clear")}}}},ticker:function(){{var e=this,t=1e3,n=!1
setInterval(function(){n&&e.nodes.tick.set()},t)}this.label="Ticker",this.desc="Allows actions to be fired at regular intervals",this.nodes={tick:{type:"boolean",label:"Tick",desc:"Triggers each tick of the ticker",get:function(){return!1},set:function(){Pollen.exchange.report(e.pollenID,!0,"ticker.tick")}},start:{type:"boolean",label:"Start",desc:"Start the ticker",get:function(){return!1},set:function(){n=!0,Pollen.exchange.report(e.pollenID,!0,"ticker.start")}},stop:{type:"boolean",label:"Stop",desc:"Stop the ticker",get:function(){return!1},set:function(){n=!1,Pollen.exchange.report(e.pollenID,!0,"ticker.stop")}},interval:{type:"boolean",label:"interval",desc:"Stop the ticker",get:function(){return!1},set:function(){n=!1,Pollen.exchange.report(e.pollenID,!0,"ticker.interval")}}}},store:function(){var e=this,t=0
this.label="Store",this.desc="Store a value for later use",this.nodes={value:{type:"mixed",label:"Value",desc:"Value to store",get:function(){return t},set:function(n){t=n,Pollen.exchange.report(e.pollenID,"value",n,"store.value")}}}},gate:function(){var e=this,t=!0,n=""
this.label="Gate",this.desc="A simple data gate which is set to either open or closed",this.nodes={open:{type:"boolean",label:"Open",desc:"Open the gate to let data through",get:function(){return t},set:function(){t=!0,Pollen.exchange.report(e.pollenID,"data",n,"gate.open")}},close:{type:"boolean",label:"Close",desc:"Close the gate to stop data getting through",get:function(){return t},set:function(){t=!1}},data:{type:"boolean",label:"State",desc:"Get/Set the current state of the gate, open (true) or closed (false)",get:function(){return n},set:function(o){n=o,t&&Pollen.exchange.report(e.pollenID,"data",n,"gate.data")}}}},andGate:function(){var e=this,t=!1,n=!1,o=""
this.label="Gate (AND)",this.desc="A data gate which will only be open when both conditions are true",this.nodes={conditionA:{type:"mixed",label:"Condition A",desc:"The first condition which must be met to open gate",get:function(){return t},set:function(r){t=r,t&&n&&Pollen.exchange.report(e.pollenID,"data",o,"andGate.conditionA")}},conditionB:{type:"mixed",label:"Condition B",desc:"The second condition which must be met to open gate",get:function(){return n},set:function(r){n=r,t&&n&&Pollen.exchange.report(e.pollenID,"data",o,"andGate.conditionB")}},data:{type:"mixed",label:"data",desc:"The data to transfer if gate is open",get:function(){return o},set:function(r){o=r,t&&n&&Pollen.exchange.report(e.pollenID,"data",o,"andGate.data")}}}},orGate:function(){var e=this,t=!1,n=!1,o=""
this.labe="Gate (OR)",this.desc="A data gate which will be open when one or both conditions are true",this.nodes={conditionA:{type:"boolean",label:"Condition A",desc:"The first condition which must be met to open gate",get:function(){return t},set:function(o){t=o,(t||n)&&Pollen.exchange.report(e.pollenID,"state",data,"orGate.conditionA")}},conditionB:{type:"boolean",label:"Condition B",desc:"The second condition which must be met to open gate",get:function(){return n},set:function(o){n=o,(t||n)&&Pollen.exchange.report(e.pollenID,"state",data,"orGate.conditionB")}},data:{type:"boolean",label:"State",desc:"The first condition which must be met to open gate",get:function(){return o},set:function(r){o=r,(t||n)&&Pollen.exchange.report(e.pollenID,"state",data,"orGate.data")}}}},eorGate:function(){var e=this,t=!1,n=!1,o=""
this.labe="Gate (EOR)",this.desc="A data gate which will be open when one but not both conditions are true",this.nodes={conditionA:{type:"boolean",label:"Condition A",desc:"The first condition which must be met to open gate",get:function(){return t},set:function(o){t=o,(t&&!n||!t&&n)&&Pollen.exchange.report(e.pollenID,"state",data,"eorGate.conditionA")}},conditionB:{type:"boolean",label:"Condition B",desc:"The second condition which must be met to open gate",get:function(){return n},set:function(o){n=o,(t&&!n||!t&&n)&&Pollen.exchange.report(e.pollenID,"state",data,"eorGate.conditionB")}},data:{type:"boolean",label:"State",desc:"The first condition which must be met to open gate",get:function(){return o},set:function(r){o=r,(t&&!n||!t&&n)&&Pollen.exchange.report(e.pollenID,"state",data,"eorGate.data")}}}},inputSwitch:function(){var _this=this,_cinp=0,_inputs=["","","","","","","",""]
this.label="Input Switch",this.desc="Switch between multiple data inputs",this.nodes={input0:{label:"Input 0",type:"mixed",desc:"Input connector",get:function(){return _inputs[0]},set:function(e){_inputs[0]=e,0==_cinp&&Pollen.exchange.report(_this.pollenID,"data",e,"inputSwitch.input0")}},input1:{label:"Input 0",type:"mixed",desc:"Input connector",get:function(){return _inpputs[1]},set:function(e){_inputs[1]=e,1==_cinp&&Pollen.exchange.report(_this.pollenID,"data",e,"inputSwitch.input1")}},input2:{label:"Input 2",type:"mixed",desc:"Input connector",get:function(){return _inputs[2]},set:function(e){_inputs[2]=e,2==_cinp&&Pollen.exchange.report(_this.pollenID,"data",e,"inputSwitch.input2")}},input3:{label:"Input 3",type:"mixed",desc:"Input connector",get:function(){return _inputs[3]},set:function(e){_inputs[3]=e,3==_cinp&&Pollen.exchange.report(_this.pollenID,"data",e,"inputSwitch.input3")}},input4:{label:"Input 4",type:"mixed",desc:"Input connector",get:function(){return _inputs[4]},set:function(e){_inputs[4]=e,4==_cinp&&Pollen.exchange.report(_this.pollenID,"data",e,"inputSwitch.input4")}},input5:{label:"Input 5",type:"mixed",desc:"Input connector",get:function(){return _inputs[5]},set:function(e){_inputs[5]=e,5==_cinp&&Pollen.exchange.report(_this.pollenID,"data",e,"inputSwitch.input5")}},input6:{label:"Input 6",type:"mixed",desc:"Input connector",get:function(){return _inputs[6]},set:function(e){_inputs[6]=e,6==_cinp&&Pollen.exchange.report(_this.pollenID,"data",e,"inputSwitch.input6")}},input7:{type:"mixed",label:"Input 7",desc:"Input connector",get:function(){return _inputs[7]},set:function(e){_inputs[7]=e,7==_cinp&&Pollen.exchange.report(_this.pollenID,"data",e,"inputSwitch.input7")}},useInput:{label:"Use Input",type:"number",desc:"Set the number of the data input to use",get:function(){return _cinp},set:function(v){_cinp=v,Pollen.exchange.report(_this.pollenID,"data",eval("_inp"+v),"inputSwitch.useInput")}},data:{label:"Data",type:"mixed",desc:"The data to transfer",get:function(){return _data},set:function(e){_data=e,Pollen.exchange.report(_this.pollenID,"data",_data,"inputSwitch.data")}}}},outputSwitch:function(){var e=this,t=0,n=["","","","","","","",""],o=""
this.label="Output Switch",this.desc="Switch between multiple data outputs",this.nodes={output0:{label:"Output 0",type:"mixed",desc:"Output connector",get:function(){return n[0]},set:function(o){n[0]=o,0==t&&Pollen.exchange.report(e.pollenID,"output0",o,"outputSwitch.output0")}},output1:{label:"Output 1",type:"mixed",desc:"Output connector",get:function(){return n[1]},set:function(o){n[1]=o,1==t&&Pollen.exchange.report(e.pollenID,"output1",o,"outputSwitch.output1")}},output2:{label:"Output 2",type:"mixed",desc:"Output connector",get:function(){return n[2]},set:function(o){n[2]=o,2==t&&Pollen.exchange.report(e.pollenID,"output2",o,"outputSwitch.output2")}},output3:{label:"Output 3",type:"mixed",desc:"Output connector",get:function(){return n[3]},set:function(o){n[3]=o,3==t&&Pollen.exchange.report(e.pollenID,"output3",o,"outputSwitch.output3")}},output4:{label:"Output 4",type:"mixed",desc:"Output connector",get:function(){return n[4]},set:function(o){n[4]=o,4==t&&Pollen.exchange.report(e.pollenID,"output4",o,"outputSwitch.output4")}},output5:{label:"Output 5",type:"mixed",desc:"Output connector",get:function(){return n[5]},set:function(o){n[5]=o,5==t&&Pollen.exchange.report(e.pollenID,"output5",o,"outputSwitch.output5")}},output6:{label:"Output 6",type:"mixed",desc:"Output connector",get:function(){return n[6]},set:function(o){n[6]=o,6==t&&Pollen.exchange.report(e.pollenID,"output6",o,"outputSwitch.output6")}},output7:{label:"Output 7",type:"mixed",desc:"Output connector",get:function(){return n[7]},set:function(o){n[7]=o,7==t&&Pollen.exchange.report(e.pollenID,"output7",o,"outputSwitch.output7")}},useOutput:{label:"Use Output",type:"number",desc:"Set the number of the data output to use",get:function(){return t},set:function(n){t=n,Pollen.exchange.report(e.pollenID,"output"+n,o,"outputSwitch.useOutput")}},data:{label:"Data",type:"mixed",desc:"The data to delegate",get:function(){return o},set:function(r){o=r,n[t]=o,Pollen.exchange.report(e.pollenID,"output"+t,o,"outputSwitch.data")}}}},randomNumberGenerator:function(){var e=this,t=!0,n=0,o=1,r=0
this.label="Random Number Generator",this.desc="Generates a random number between a specified range",this.nodes={round:{type:"boolean",label:"Round",desc:"Round the generated number to nearest whole number",get:function(){return t},set:function(e){t=e}},rangeStart:{type:"number",label:"Range Start",desc:"The number the random range should start at",get:function(){return n},set:function(e){n=e}},rangeEnd:{type:"number",label:"Range End",desc:"The number the random range should end at",get:function(){return o},set:function(e){o=e}},data:{type:"number",label:"Data",desc:"The resulting randomly generated number",get:function(){return r},set:function(t){r=t,Pollen.exchange.report(e.pollenID,"data",r,"randomNumberGenerator.data")}},trigger:{type:"boolean",label:"Trigger",desc:"Trigger the generation of a random number",get:function(){return!1},set:function(){var i=Math.random()*(o-n)
t&&(i=Math.round(i)),r=n+i,Pollen.exchange.report(e.pollenID,"data",r,"randomNumberGenerator.trigger")}}}},tweener:function(){function e(){o?h=!0:(h=!0,o=setInterval(function(){h&&(s+=d,c>=s?(l=n(i[p],s),Pollen.exchange.report(r.pollenID,"output",l,"tweener.output (func)")):(s=0,h=!1,clearInterval(d),Pollen.exchange.report(r.pollenID,"finished",!0,"tweener.finished")))},d))}function t(){h=!1}function n(e,t){var t=t,o=a,r=u-a,i=c
switch(e){case"linear":return i/t*r+o
case"easeInQuad":return r*(t/=i)*t+o
case"easeOutQuad":return-r*(t/=i)*(t-2)+o
case"easeInOutQuad":return(t/=i/2)<1?r/2*t*t+o:-r/2*(--t*(t-2)-1)+o
case"easeInCubic":return r*(t/=i)*t*t+o
case"easeOutCubic":return r*((t=t/i-1)*t*t+1)+o
case"easeInOutCubic":return(t/=i/2)<1?r/2*t*t*t+o:r/2*((t-=2)*t*t+2)+o
case"easeInQuart":return r*(t/=i)*t*t*t+o
case"easeOutQuart":return-r*((t=t/i-1)*t*t*t-1)+o
case"easeInOutQuart":return(t/=i/2)<1?r/2*t*t*t*t+o:-r/2*((t-=2)*t*t*t-2)+o
case"easeInQuint":return r*(t/=i)*t*t*t*t+o
case"easeOutQuint":return r*((t=t/i-1)*t*t*t*t+1)+o
case"easeInOutQuint":return(t/=i/2)<1?r/2*t*t*t*t*t+o:r/2*((t-=2)*t*t*t*t+2)+o
case"easeInSine":return-r*Math.cos(t/i*(Math.PI/2))+r+o
case"easeOutSine":return r*Math.sin(t/i*(Math.PI/2))+o
case"easeInOutSine":return-r/2*(Math.cos(Math.PI*t/i)-1)+o
case"easeInExpo":return 0==t?o:r*Math.pow(2,10*(t/i-1))+o
case"easeOutExpo":return t==i?o+r:r*(-Math.pow(2,-10*t/i)+1)+o
case"easeInOutExpo":return 0==t?o:t==i?o+r:(t/=i/2)<1?r/2*Math.pow(2,10*(t-1))+o:r/2*(-Math.pow(2,-10*--t)+2)+o
case"easeInCirc":return-r*(Math.sqrt(1-(t/=i)*t)-1)+o
case"easeOutCirc":return r*Math.sqrt(1-(t=t/i-1)*t)+o
case"easeInOutCirc":return(t/=i/2)<1?-r/2*(Math.sqrt(1-t*t)-1)+o:r/2*(Math.sqrt(1-(t-=2)*t)+1)+o
case"easeInElastic":var l=1.70158,s=0,p=r
if(0==t)return o
if(1==(t/=i))return o+r
if(s||(s=.3*i),p<Math.abs(r)){p=r
var l=s/4}else var l=s/(2*Math.PI)*Math.asin(r/p)
return-(p*Math.pow(2,10*(t-=1))*Math.sin(2*(t*i-l)*Math.PI/s))+o
case"easeOutElastic":var l=1.70158,s=0,p=r
if(0==t)return o
if(1==(t/=i))return o+r
if(s||(s=.3*i),p<Math.abs(r)){p=r
var l=s/4}else var l=s/(2*Math.PI)*Math.asin(r/p)
return p*Math.pow(2,-10*t)*Math.sin(2*(t*i-l)*Math.PI/s)+r+o
case"easeInOutElastic":var l=1.70158,s=0,p=r
if(0==t)return o
if(2==(t/=i/2))return o+r
if(s||(s=.3*i*1.5),p<Math.abs(r)){p=r
var l=s/4}else var l=s/(2*Math.PI)*Math.asin(r/p)
return 1>t?-.5*p*Math.pow(2,10*(t-=1))*Math.sin(2*(t*i-l)*Math.PI/s)+o:p*Math.pow(2,-10*(t-=1))*Math.sin(2*(t*i-l)*Math.PI/s)*.5+r+o
case"easeInBack":return void 0==l&&(l=1.70158),r*(t/=i)*t*((l+1)*t-l)+o
case"easeOutBack":return void 0==l&&(l=1.70158),r*((t=t/i-1)*t*((l+1)*t+l)+1)+o
case"easeInOutBack":return void 0==l&&(l=1.70158),(t/=i/2)<1?r/2*t*t*(((l*=1.525)+1)*t-l)+o:r/2*((t-=2)*t*(((l*=1.525)+1)*t+l)+2)+o
case"easeInBounce":return r-n("easeOutBounce",i-t)+o
case"easeOutBounce":return(t/=i)<1/2.75?7.5625*r*t*t+o:2/2.75>t?r*(7.5625*(t-=1.5/2.75)*t+.75)+o:2.5/2.75>t?r*(7.5625*(t-=2.25/2.75)*t+.9375)+o:r*(7.5625*(t-=2.625/2.75)*t+.984375)+o
case"easeInOutBounce":return i/2>t?.5*n("easeInBounce",2*t)+o:.5*n("easeOutBounce",2*t-i)+.5*r+o}}var o,r=this,i=["linear","easeInQuad","easeOutQuad"],a=0,u=0,l=0,c=1e3,s=0,p=0,d=10,h=!1
this.label="Tweener",this.desc="Tween a property between current value to a new value over a period of time",this.nodes={duration:{type:"number",label:"Duration",desc:"The duration over which to perform the tween",get:function(){return _duration},set:function(e){c=e,Pollen.exchange.report(r.pollenID,"duration",c,"tweener.duration")}},startValue:{type:"number",label:"startValue",desc:"The start value for the tween",get:function(){return a},set:function(e){a=e,Pollen.exchange.report(r.pollenID,"startValue",a,"tweener.startValue")}},endValue:{type:"number",label:"endValue",desc:"The end value for the tween",get:function(){return u},set:function(e){u=e,Pollen.exchange.report(r.pollenID,"endValue",u,"tweener.endValue")}},output:{type:"number",label:"output",desc:"The current tween value",get:function(){return l},set:function(e){l=e,Pollen.exchange.report(r.pollenID,"output",l,"tweener.output")}},play:{type:"boolean",label:"Play",desc:"Play the tween",get:function(){return!1},set:function(){e()}},stop:{type:"boolean",label:"Stop",desc:"Stop the tween",get:function(){return!1},set:function(){t()}},finished:{type:"boolean",label:"Finished",desc:"Fired when the tween is finished",get:function(){return!1},set:function(){Pollen.exchange.report(r.pollenID,"finished",!0,"tweener.finished")}}}}},_ui={documentObject:function(e){var t=this,n=0,o=0,r=0,i=0,a=e
this.label="Document Object",this.desc="A raw DOM element",this.nodes={self:{type:"object",label:"Self",desc:"Send this object along as a reference",get:function(){return this},set:function(){Pollen.exchange.report(t.pollenID,"self",this,"documentObject.self")}},x:{label:"Position X",type:"number",get:function(){return n},set:function(e){n=e,a.style.left=e+"px",Pollen.exchange.report(t.pollenID,"x",n,"documentObject.x")}},y:{label:"Position Y",type:"number",get:function(){return o},set:function(e){o=e,a.style.top=e+"px",Pollen.exchange.report(t.pollenID,"y",o,"documentObject.x")}},width:{label:"Width",type:"number",get:function(){return i},set:function(e){i=e,a.style.width=e="px",Pollen.exchange.report(t.pollenID,"width",i,"documentObject.width")}},height:{label:"Height",type:"number",get:function(){return r},set:function(e){r=e,a.style.height=e+"px",Pollen.exchange.report(t.pollenID,"height",r,"documentObject.height")}}}}}
return this.make=function(v,args){var func=eval("_"+v),obj=new func(args)
return Pollen.pollinate(obj),obj},this}(),this.pollinate=function(){var e
for(var t in arguments){e=arguments[t]
var n=isDOM(e)
if(!n&&!e.isPollinated||n&&!e.className.indexOf("pollinated")>-1){var o=UID()
n?(console.log(e),e.setAttribute("pollenID",o),e.className+="pollinated"):(e.isPollinated=!0,e.pollenID=o),isDOM||e.hasDefaultNodes||addDefaultNodes(e),n||(e.hasNode=function(t){return void 0==e.nodes?!1:e.nodes[t]},e.setNode=function(t,n){e.nodes[t].set(n),Pollen.exchange.report(e.pollenID,t,n,"Pollinate.setNode")},e.getNode=function(t){return e.nodes[t].get()})}}}}
